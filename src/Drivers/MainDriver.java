package Drivers;

import java.io.File;
import java.util.Arrays;
import java.util.HashSet;
import java.util.concurrent.TimeUnit;

import org.jgrapht.alg.shortestpath.DijkstraShortestPath;
import org.jgrapht.graph.*;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import Maps.MapVertex;

public class MainDriver {
	Account act;
	Actions builder;
	DisplayBox controlPanel = null;
	boolean loginWait = true;
	DefaultDirectedGraph<MapVertex, DefaultEdge> map;

	public MainDriver() {
		System.setProperty("webdriver.chrome.driver", "libraries/chromedriver.exe");
		controlPanel = new DisplayBox();
		controlPanel.setScreenLogin(this);
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--disable-extensions");
		options.addArguments("--mute-audio");
		Access.driver = new ChromeDriver(options);
		Access.driver.get("https://accounts.google.com/signin/v2/identifier?service=ah&passive=true&continue=https%3A%2F%2Fappengine.google.com%2F_ah%2Fconflogin%3Fcontinue%3Dhttps%3A%2F%2Fwww.playinitium.com%2FServletUserControl%253Ftype%253Doauth%2526authType%253Dgoogle&flowName=GlifWebSignIn&flowEntry=ServiceLogin");
		Access.mainWindow = Access.driver.getWindowHandle();
		Access.js = (JavascriptExecutor) Access.driver;
		Access.driver.manage().timeouts().setScriptTimeout(500, TimeUnit.MILLISECONDS);
		
		ChromeOptions noImage = new ChromeOptions().addExtensions(new File("libraries/Block-image_v1.0.crx"));
	    
		Access.itemDriver = new ChromeDriver(noImage);
		Access.itemDriver.manage().window().setPosition(new Point(-2000, 0));
		Access.itemDriver.get("https://accounts.google.com/signin/v2/identifier?service=ah&passive=true&continue=https%3A%2F%2Fappengine.google.com%2F_ah%2Fconflogin%3Fcontinue%3Dhttps%3A%2F%2Fwww.playinitium.com%2FServletUserControl%253Ftype%253Doauth%2526authType%253Dgoogle&flowName=GlifWebSignIn&flowEntry=ServiceLogin");
		
		mapBuilder();
		
		while (act == null) {
			try {
				Thread.sleep(300);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		controlPanel.canLogIn(this);
		
		while (loginWait) {
			try {
				Thread.sleep(300);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		login();
	}

	public void mapBuilder() {
		map = new DefaultDirectedGraph<>(DefaultEdge.class);

		map.addVertex(Access.Aera);
		map.addVertex(Access.AeraCountrySide);
		Access.AeraCountrySide.campable = true;
		map.addVertex(Access.AeraInn);
		Access.AeraInn.rest = true;
		map.addVertex(Access.CastleCourtyard);
		map.addVertex(Access.CastleGrounds);
		Access.CastleGrounds.campable = true;
		map.addVertex(Access.DenseJungle);
		map.addVertex(Access.DenseJungle2);
		map.addVertex(Access.DenseJungle3);
		map.addVertex(Access.DenseJungle4);
		map.addVertex(Access.GreatNorthernValley);
		Access.GreatNorthernValley.campable = true;
		map.addVertex(Access.HighRoad);
		Access.HighRoad.campable = true;
		map.addVertex(Access.HighRoadSwampland);
		map.addVertex(Access.MyHouse);
		map.addVertex(Access.MyHouse2);
		map.addVertex(Access.MyHouse3);
		map.addVertex(Access.MyHouse4);
		map.addVertex(Access.NorthernHills);
		map.addVertex(Access.NorthWestHills);
		map.addVertex(Access.OuterGate);
		map.addVertex(Access.OvergrownPath);
		map.addVertex(Access.TempleRuins);
		map.addVertex(Access.TheFork);
		Access.TheFork.campable = true;
		map.addVertex(Access.HighRoadForest);
		map.addVertex(Access.HighRoadDenseForest);
		map.addVertex(Access.HighRoadWaterfall);
		map.addVertex(Access.HighRoadForestLookout);
		map.addVertex(Access.HighRoadLake);
		Access.HighRoadLake.campable = true;
		map.addVertex(Access.HighRoadOgrePass);
		map.addVertex(Access.HighRoadWaterfallClearing);
		Access.HighRoadWaterfallClearing.campable = true;
		map.addVertex(Access.Volantis);
		map.addVertex(Access.VolantisCountryside);
		map.addVertex(Access.VolantisRiver);
		map.addVertex(Access.SouthVolantisBeach);
		map.addVertex(Access.CliffsideCoast);
		map.addVertex(Access.SeasideLanding);
		map.addVertex(Access.WindingRiver);
		Access.WindingRiver.campable = true;
		map.addVertex(Access.WindingRiver2);
		map.addVertex(Access.WindingRiver3);
		map.addVertex(Access.WindingRiver4);
		map.addVertex(Access.WindingRiver5);
		map.addVertex(Access.WindingRiver6);
		map.addVertex(Access.WindingRiver7);
		Access.WindingRiver7.campable = true;
		map.addVertex(Access.SelenePlateau);
		map.addVertex(Access.UmbraAbode);
		Access.UmbraAbode.rest = true;
		map.addVertex(Access.PerigeePeak);
		map.addVertex(Access.AphelionShrine);
		map.addVertex(Access.ShadowySteppe);
		map.addVertex(Access.TrollCamp);
		map.addVertex(Access.SuspiciousCombatsiteGiantTurtle);
		map.addVertex(Access.WildeburnForest);
		Access.WildeburnForest.campable = true;
		map.addVertex(Access.TaelhollowSwamp);
		map.addVertex(Access.TaelhollowHut);
		map.addVertex(Access.AeraSwamplands);
		map.addVertex(Access.GrandMountain);
		map.addVertex(Access.Desert);
		map.addVertex(Access.NorthMountainRange);
		map.addVertex(Access.BlackMountain);
		map.addVertex(Access.HiddenPass);
		map.addVertex(Access.EasternDesert);
		map.addVertex(Access.EasternDesert2);
		map.addVertex(Access.EasternDesert3);
		map.addVertex(Access.DeathValley);
		map.addVertex(Access.Oasis);
		map.addVertex(Access.Spargus);
		map.addVertex(Access.RestStop);
		Access.RestStop.rest = true;
		map.addVertex(Access.NorthernSpargusGate);
		map.addVertex(Access.CityOutskirts);
		map.addVertex(Access.SandyDesertPass);
		map.addVertex(Access.RollingDunes);
		Access.RollingDunes.campable = true;
		map.addVertex(Access.RollingDunes2);
		map.addVertex(Access.RollingDunes3);
		map.addVertex(Access.StrangeRockFormation);
		Access.RollingDunes3.campable = true;
		map.addVertex(Access.RollingDunes4);
		map.addVertex(Access.CalmCave);
		Access.CalmCave.rest = true;
		map.addVertex(Access.RollingDunes5);
		map.addVertex(Access.RollingDunes6);
		map.addVertex(Access.RollingDunes7);
		Access.RollingDunes7.campable = true;
		map.addVertex(Access.RollingDunes8);
		map.addVertex(Access.SerpentPit);
		Access.TaelhollowHut.rest = true;
		map.addVertex(Access.NorthernVolantisCoastline);
		map.addVertex(Access.NorsMountain);
		map.addVertex(Access.NorsPlains);
		Access.NorsPlains.campable = true;
		map.addVertex(Access.SandSweptPlains);
		map.addVertex(Access.GapingCave);
		map.addVertex(Access.KoboldSettlement);
		map.addVertex(Access.VolantisDocks);
		map.addVertex(Access.FishermansSeasideCottage);
		map.addVertex(Access.FishermansFerry);
		map.addVertex(Access.FishermansFerry2);
		map.addVertex(Access.Maelstrom);
		map.addVertex(Access.FishermansFerry3);
		map.addVertex(Access.AseridithIslandDocks);
		map.addVertex(Access.AseridithFortNorthBeach);
		map.addVertex(Access.AseridithFortEastBeach);
		map.addVertex(Access.AseridithFortSouthBeach);
		map.addVertex(Access.AseridithFortWestBeach);
		map.addVertex(Access.AseridithFortOuterEasternWalls);
		map.addVertex(Access.AseridithFortOuterSouthernWalls);
		map.addVertex(Access.AseridithFortOuterWesternWalls);
		map.addVertex(Access.AseridithFortGates);
		map.addVertex(Access.AseridithFortCourtyard);
		Access.AseridithFortCourtyard.campable = true;
		map.addVertex(Access.AseridithVillage);
		Access.AseridithVillage.rest = true;
		map.addVertex(Access.AseridithFarmland);
		map.addVertex(Access.AseridithFortGuardtower);
		map.addVertex(Access.AseridithFortGuardtower2);
		map.addVertex(Access.AseridithFortGuardtower3);
		map.addVertex(Access.AseridithFortGuardtowerTop);
		map.addVertex(Access.ConcealedCavern);
		map.addVertex(Access.ClawMarkedCavern);
		Access.ClawMarkedCavern.campable = true;
		map.addVertex(Access.TaelhollowSwampShrine);
		map.addVertex(Access.CliffsideLookout);
		map.addVertex(Access.RockyPath);
		map.addVertex(Access.MountainPlains);
		map.addVertex(Access.HobgoblinTribeCampsite);
		Access.CliffsideLookout.campable = true;
		map.addVertex(Access.ElvenGrove);
		map.addVertex(Access.HermitCottage);
		Access.HermitCottage.rest = true;
		map.addVertex(Access.CricketonCaveEntrance);
		map.addVertex(Access.CricketonCave);
		map.addVertex(Access.UndergroundStream);
		Access.UndergroundStream.campable = true;
		map.addVertex(Access.InfestedTunnel);
		map.addVertex(Access.BaronCricketonsLair);
		map.addVertex(Access.KujirMarshEntrance);
		map.addVertex(Access.KujirMarsh);
		map.addVertex(Access.KujirMarsh2);
		map.addVertex(Access.KujirMarsh3);
		map.addVertex(Access.KujirMarsh4);
		map.addVertex(Access.LizardfolkMarshland);
		map.addVertex(Access.LizardfolkMarshland2);
		map.addVertex(Access.LizardfolkMarshland3);
		Access.LizardfolkMarshland3.campable = true;
		map.addVertex(Access.LizardkingHideout);
		map.addVertex(Access.LizardkingDen);
		map.addVertex(Access.HiddenPath);
		map.addVertex(Access.CalmPond);
		Access.CalmPond.rest = true;
		map.addVertex(Access.AphelionShrineInterior);
		map.addVertex(Access.AphelionShrineSanctum);
		map.addVertex(Access.AphelionShrineInnerSanctum);
		map.addVertex(Access.AphelionShrineRepository);
		map.addVertex(Access.AphelionShrineArchives);
		map.addVertex(Access.ArtiusRiver);
		map.addVertex(Access.ArtiusLane);
		map.addVertex(Access.MistyForest);
		map.addVertex(Access.MistyMountainsBasin);
		map.addVertex(Access.MistyMountainPass);
		map.addVertex(Access.SteepMountainPath);
		map.addVertex(Access.LookoutPoint);
		map.addVertex(Access.Xaruk);
		map.addVertex(Access.XarukForest);
		map.addVertex(Access.XarukForest2);
		map.addVertex(Access.XarukForest3);
		map.addVertex(Access.XarukForest4);
		map.addVertex(Access.XarukForest5);
		map.addVertex(Access.XarukForest6);
		map.addVertex(Access.GreatGoblinFortressofXaruk);
		map.addVertex(Access.FortressEntrance);
		map.addVertex(Access.Barracks);
		map.addVertex(Access.MainCorridor);
		map.addVertex(Access.GeneralsQuarters);
		map.addVertex(Access.Armory);
		map.addVertex(Access.MessHall);
		map.addVertex(Access.Pantry);
		Access.Pantry.campable = true;
		map.addVertex(Access.HiddenStaircase);
		map.addVertex(Access.MassiveCavern);
		map.addVertex(Access.TranquilChamber);
		Access.TranquilChamber.rest = true;
		map.addVertex(Access.EasternDesert4);
		map.addVertex(Access.CinderPlains);
		map.addVertex(Access.DriedLakebed);
		map.addVertex(Access.WindyExpanse);
		map.addVertex(Access.CinderMountainRange);
		Access.CinderMountainRange.campable = true;
		map.addVertex(Access.SmolderingMountain);
		map.addVertex(Access.SmolderingMountainAscent);
		map.addVertex(Access.SmolderingMountainPeak);
		map.addVertex(Access.CoreofSmolderingMountain);
		map.addVertex(Access.GuardianoftheCore);
		map.addVertex(Access.CrumblingTemple);
		map.addVertex(Access.AtlasTrailEntrance);
		map.addVertex(Access.AseridithFortCourtyard2);
		map.addVertex(Access.AseridithFortInnerGate);
		map.addVertex(Access.AseridithFortBarracks);
		map.addVertex(Access.AseridithFortTower);
		map.addVertex(Access.AseridithFortTower2);
		map.addVertex(Access.AseridithCommandersQuarters);
		map.addVertex(Access.AseridithFortLibrary);
		Access.AseridithFortLibrary.rest = true;
		map.addVertex(Access.AseridithKeepGates);
		map.addVertex(Access.AseridithKeepHallway);
		map.addVertex(Access.AseridithKeepGrandHall);
		map.addVertex(Access.AseridithKeepKitchen);
		Access.AseridithKeepKitchen.campable = true;
		map.addVertex(Access.AseridithKnightsQuarters);
		map.addVertex(Access.TowerEntrance);
		map.addVertex(Access.DarkCorridor);
		map.addVertex(Access.LongHallway);
		map.addVertex(Access.SlumberChambers);
		Access.SlumberChambers.rest = true;
		map.addVertex(Access.ApprenticeTrainingRoom);
		map.addVertex(Access.FirstFloorStaircase);
		map.addVertex(Access.SecondFloorLanding);
		map.addVertex(Access.CommonArea);
		map.addVertex(Access.WestLibrary);
		map.addVertex(Access.SummoningChamber);
		map.addVertex(Access.NarrowPassageway);
		map.addVertex(Access.EastLibrary);
		map.addVertex(Access.PotionsLaboratory);
		map.addVertex(Access.HerbGarden);
		map.addVertex(Access.SecondFloorStaircase);
		map.addVertex(Access.ThirdFloorLanding);
		map.addVertex(Access.Observatory);
		Access.Observatory.campable = true;
		map.addVertex(Access.AstronomyAlcove);
		Access.AstronomyAlcove.rest = true;
		map.addVertex(Access.SecretPassage);
		map.addVertex(Access.GrandStudy);
		map.addVertex(Access.AlchemistQuarters);
		map.addVertex(Access.ThirdFloorStaircase);
		map.addVertex(Access.Armory2);
		map.addVertex(Access.PortalRoom);
		map.addVertex(Access.FourthFloorLanding);
		map.addVertex(Access.StrangeEmptyRoom);
		map.addVertex(Access.StrangeEmptyRoom2);
		map.addVertex(Access.StrangeEmptyRoom3);
		Access.StrangeEmptyRoom3.campable = true;
		map.addVertex(Access.ArchmagesQuarters);
		map.addVertex(Access.Inferno);
		map.addVertex(Access.SacredEarthTemple);
		map.addVertex(Access.EchoingScream);
		map.addVertex(Access.StoneGateway);
		map.addVertex(Access.DescendingPath);
		map.addVertex(Access.DeepHallway);
		map.addVertex(Access.SmolderingCave);
		Access.SmolderingCave.campable = true;
		map.addVertex(Access.FortEntrance);
		map.addVertex(Access.FortJunction);
		map.addVertex(Access.OldFortLanding);
		map.addVertex(Access.PlaceofWorship);
		Access.PlaceofWorship.rest = true;
		map.addVertex(Access.SacredAirTemple);
		map.addVertex(Access.OuterStairs);
		map.addVertex(Access.CrumblingStoneStairs);
		map.addVertex(Access.Aviary);
		map.addVertex(Access.ColumnedRoom);
		map.addVertex(Access.WesternCarvedHallway);
		map.addVertex(Access.MoonRoom);
		Access.MoonRoom.campable = true;
		map.addVertex(Access.RedCliffs);
		map.addVertex(Access.RedCliffsEdge);
		map.addVertex(Access.LostSeaShore);
		map.addVertex(Access.LostSea);
		map.addVertex(Access.LostSea2);
		map.addVertex(Access.LostSea3);
		map.addVertex(Access.LostSea4);
		map.addVertex(Access.EmeraldIsle);
		map.addVertex(Access.EmeraldIsleShores);
		map.addVertex(Access.AirTempleEntrance);
		map.addVertex(Access.SmokyAntechamber);
		map.addVertex(Access.EastSingedCorridor);
		map.addVertex(Access.DarkStairway);
		map.addVertex(Access.RedCrypt);
		Access.RedCrypt.campable = true;
		map.addVertex(Access.MainCorridor2);
		map.addVertex(Access.HeatFilledAscent);
		map.addVertex(Access.VolcanicAntechamber);
		map.addVertex(Access.SacredFireTemple);
		map.addVertex(Access.LavaTube);
		map.addVertex(Access.WestSingedCorridor);
		map.addVertex(Access.WastelandOverlook);
		Access.WastelandOverlook.campable = true;
		map.addVertex(Access.Savannah);
		map.addVertex(Access.AbandonedHut);
		map.addVertex(Access.AbandonedHutInterior);
		Access.AbandonedHutInterior.rest = true;
		map.addVertex(Access.AbandondedTribalCamp);
		map.addVertex(Access.Perch);
		map.addVertex(Access.PerchStairwell);
		map.addVertex(Access.ArchersPerch);
		map.addVertex(Access.VallAVillage);
		map.addVertex(Access.TanningHut);
		map.addVertex(Access.KeeperOfTheFlame);
		map.addVertex(Access.ThatchedShelter);
		map.addVertex(Access.HutInterior);
		map.addVertex(Access.HuntersChamber);
		map.addVertex(Access.StoreRoom);
		map.addVertex(Access.RootCellar);
		Access.RootCellar.campable = true;
		map.addVertex(Access.Ziggurat);
		map.addVertex(Access.AromaticChamber);
		map.addVertex(Access.PriestessChamber);
		map.addVertex(Access.StoneAlcove);
		Access.StoneAlcove.campable = true;
		map.addVertex(Access.ForbiddenForest);
		map.addVertex(Access.DeadJungles);
		map.addVertex(Access.AbandonedHut2);
		Access.AbandonedHut2.rest = true;
		map.addVertex(Access.TomboftheFallen);
		map.addVertex(Access.Stairwell);
		map.addVertex(Access.TombEntrance);
		map.addVertex(Access.TombCenter);
		map.addVertex(Access.EmbalmingRoom);
		map.addVertex(Access.BurialHall);
		map.addVertex(Access.LongHallway2);
		map.addVertex(Access.ShrineofNaKareth);
		map.addVertex(Access.SpiderCaveCavern);
		Access.SpiderCaveCavern.campable = true;
		map.addVertex(Access.DeathlyForest);
		map.addVertex(Access.Labyrinth);
		map.addVertex(Access.Labyrinth2);
		map.addVertex(Access.Labyrinth3);
		map.addVertex(Access.Labyrinth4);
		map.addVertex(Access.Labyrinth5);
		map.addVertex(Access.DescendingPit);
		map.addVertex(Access.GlowingAscent);
		map.addVertex(Access.BriefRespite);
		Access.BriefRespite.rest = true;
		
		//map.addVertex(Access);
		
		map.addVertex(Access.Death);
		
		Access.map = map;
		Access.addTwoWayEdge(Access.Aera, Access.AeraCountrySide);
		Access.addTwoWayEdge(Access.Aera, Access.AeraInn);
		Access.addTwoWayEdge(Access.Aera, Access.NorthWestHills);
		Access.addTwoWayEdge(Access.Aera, Access.MyHouse);
		Access.addTwoWayEdge(Access.Aera, Access.MyHouse2);
		Access.addTwoWayEdge(Access.Aera, Access.MyHouse3);
		Access.addTwoWayEdge(Access.Aera, Access.MyHouse4);
		Access.addTwoWayEdge(Access.AeraCountrySide, Access.NorthernHills);
		Access.addTwoWayEdge(Access.NorthernHills, Access.GreatNorthernValley);
		Access.addTwoWayEdge(Access.GreatNorthernValley, Access.OvergrownPath);
		Access.addTwoWayEdge(Access.OvergrownPath, Access.OuterGate);
		Access.addTwoWayEdge(Access.OuterGate, Access.CastleGrounds);
		Access.addTwoWayEdge(Access.CastleGrounds, Access.CastleCourtyard);
		Access.addTwoWayEdge(Access.NorthWestHills, Access.TheFork);
		Access.addTwoWayEdge(Access.TheFork, Access.HighRoad);
		Access.addTwoWayEdge(Access.HighRoad, Access.HighRoadSwampland);
		Access.addTwoWayEdge(Access.HighRoadSwampland, Access.DenseJungle);
		Access.addTwoWayEdge(Access.DenseJungle, Access.DenseJungle2);
		Access.addTwoWayEdge(Access.DenseJungle2, Access.DenseJungle3);
		Access.addTwoWayEdge(Access.DenseJungle2, Access.DenseJungle4);
		Access.addTwoWayEdge(Access.DenseJungle3, Access.DenseJungle4);
		Access.addTwoWayEdge(Access.DenseJungle4, Access.TempleRuins);
		Access.addTwoWayEdge(Access.HighRoadSwampland, Access.HighRoadDenseForest);
		Access.addTwoWayEdge(Access.HighRoadDenseForest, Access.HighRoadForest);
		Access.addTwoWayEdge(Access.HighRoadForest, Access.HighRoadWaterfall);
		Access.addTwoWayEdge(Access.HighRoadWaterfall, Access.HighRoadWaterfallClearing);
		Access.addTwoWayEdge(Access.HighRoadWaterfallClearing, Access.HighRoadOgrePass);
		Access.addTwoWayEdge(Access.HighRoadOgrePass, Access.HighRoadForestLookout);
		Access.addTwoWayEdge(Access.HighRoadForestLookout, Access.HighRoadLake);
		Access.addTwoWayEdge(Access.HighRoadLake, Access.VolantisRiver);
		Access.addTwoWayEdge(Access.VolantisRiver, Access.VolantisCountryside);
		Access.addTwoWayEdge(Access.VolantisCountryside, Access.Volantis);
		Access.addTwoWayEdge(Access.Volantis, Access.SouthVolantisBeach);
		Access.addTwoWayEdge(Access.SouthVolantisBeach, Access.SeasideLanding);
		Access.addTwoWayEdge(Access.SeasideLanding, Access.CliffsideCoast);
		Access.addTwoWayEdge(Access.CliffsideCoast, Access.WindingRiver);
		Access.addTwoWayEdge(Access.WindingRiver, Access.WindingRiver2);
		Access.addTwoWayEdge(Access.WindingRiver2, Access.WindingRiver3);
		Access.addTwoWayEdge(Access.WindingRiver3, Access.WindingRiver4);
		Access.addTwoWayEdge(Access.WindingRiver3, Access.WindingRiver5);
		Access.addTwoWayEdge(Access.WindingRiver5, Access.WindingRiver6);
		Access.addTwoWayEdge(Access.WindingRiver6, Access.WindingRiver7);
		Access.addTwoWayEdge(Access.WindingRiver4, Access.ShadowySteppe);
		Access.addTwoWayEdge(Access.ShadowySteppe, Access.SelenePlateau);
		Access.addTwoWayEdge(Access.SelenePlateau, Access.UmbraAbode);
		Access.addTwoWayEdge(Access.SelenePlateau, Access.PerigeePeak);
		Access.addTwoWayEdge(Access.PerigeePeak, Access.AphelionShrine);
		Access.addTwoWayEdge(Access.TrollCamp, Access.AeraCountrySide);
		Access.addTwoWayEdge(Access.SuspiciousCombatsiteGiantTurtle, Access.AeraCountrySide);
		Access.addTwoWayEdge(Access.AeraCountrySide, Access.WildeburnForest);
		Access.addTwoWayEdge(Access.WildeburnForest, Access.TaelhollowSwamp);
		Access.addTwoWayEdge(Access.TaelhollowSwamp, Access.TaelhollowHut);
		Access.addTwoWayEdge(Access.AeraCountrySide, Access.AeraSwamplands);
		Access.addTwoWayEdge(Access.AeraSwamplands, Access.GrandMountain);
		Access.addTwoWayEdge(Access.GrandMountain, Access.Desert);
		Access.addTwoWayEdge(Access.Desert, Access.NorthMountainRange);
		Access.addTwoWayEdge(Access.NorthMountainRange, Access.BlackMountain);
		Access.addTwoWayEdge(Access.BlackMountain, Access.HiddenPass);
		Access.addTwoWayEdge(Access.HiddenPass, Access.EasternDesert);
		Access.addTwoWayEdge(Access.EasternDesert, Access.EasternDesert2);
		Access.addTwoWayEdge(Access.EasternDesert2, Access.EasternDesert3);
		Access.addTwoWayEdge(Access.EasternDesert3, Access.DeathValley);
		Access.addTwoWayEdge(Access.DeathValley, Access.Oasis);
		Access.addTwoWayEdge(Access.Oasis, Access.Spargus);
		Access.addTwoWayEdge(Access.Spargus, Access.RestStop);
		Access.addTwoWayEdge(Access.Spargus, Access.NorthernSpargusGate);
		Access.addTwoWayEdge(Access.NorthernSpargusGate, Access.CityOutskirts);
		Access.addTwoWayEdge(Access.CityOutskirts, Access.SandyDesertPass);
		Access.addTwoWayEdge(Access.RollingDunes3, Access.StrangeRockFormation);
		Access.addTwoWayEdge(Access.RollingDunes4, Access.CalmCave);
		Access.addTwoWayEdge(Access.RollingDunes7, Access.SerpentPit);
		Access.addTwoWayEdge(Access.RollingDunes, Access.SandyDesertPass);
		Access.addTwoWayEdge(Access.Volantis, Access.NorthernVolantisCoastline);
		Access.addTwoWayEdge(Access.NorthernVolantisCoastline, Access.NorsMountain);
		Access.addTwoWayEdge(Access.NorsMountain, Access.GapingCave);
		Access.addTwoWayEdge(Access.NorsMountain, Access.NorsPlains);
		Access.addTwoWayEdge(Access.NorsMountain, Access.SandSweptPlains);
		Access.addTwoWayEdge(Access.NorsPlains, Access.KoboldSettlement);
		Access.addTwoWayEdge(Access.Volantis, Access.VolantisDocks);
		Access.addTwoWayEdge(Access.VolantisDocks, Access.FishermansSeasideCottage);
		Access.addTwoWayEdge(Access.FishermansSeasideCottage, Access.FishermansFerry);
		Access.addTwoWayEdge(Access.FishermansFerry, Access.FishermansFerry2);
		Access.addTwoWayEdge(Access.FishermansFerry2, Access.Maelstrom);
		Access.addTwoWayEdge(Access.Maelstrom, Access.FishermansFerry3);
		Access.addTwoWayEdge(Access.FishermansFerry3, Access.AseridithIslandDocks);
		Access.addTwoWayEdge(Access.AseridithIslandDocks, Access.AseridithFortNorthBeach);
		Access.addTwoWayEdge(Access.AseridithFortNorthBeach, Access.AseridithFortEastBeach);
		Access.addTwoWayEdge(Access.AseridithFortEastBeach, Access.AseridithFortSouthBeach);
		Access.addTwoWayEdge(Access.AseridithFortSouthBeach, Access.AseridithFortWestBeach);
		Access.addTwoWayEdge(Access.AseridithFortWestBeach, Access.AseridithFortNorthBeach);
		Access.addTwoWayEdge(Access.AseridithFortWestBeach, Access.AseridithFortOuterWesternWalls);
		Access.addTwoWayEdge(Access.AseridithFortOuterWesternWalls, Access.AseridithFortGates);
		Access.addTwoWayEdge(Access.AseridithFortGates, Access.AseridithFortNorthBeach);
		Access.addTwoWayEdge(Access.AseridithFortGates, Access.AseridithFortCourtyard);
		Access.addTwoWayEdge(Access.AseridithFortGates, Access.AseridithFortOuterEasternWalls);
		Access.addTwoWayEdge(Access.AseridithFortOuterEasternWalls, Access.AseridithFortEastBeach);
		Access.addTwoWayEdge(Access.AseridithFortOuterEasternWalls, Access.AseridithFortOuterSouthernWalls);
		Access.addTwoWayEdge(Access.AseridithFortOuterSouthernWalls, Access.AseridithFortSouthBeach);
		Access.addTwoWayEdge(Access.AseridithFortOuterSouthernWalls, Access.AseridithFortOuterWesternWalls);
		Access.addTwoWayEdge(Access.AseridithFortWestBeach, Access.AseridithVillage);
		Access.addTwoWayEdge(Access.AseridithVillage, Access.AseridithFarmland);
		Access.addTwoWayEdge(Access.AseridithFarmland, Access.AseridithFortGuardtower);
		Access.addTwoWayEdge(Access.AseridithFortGuardtower, Access.AseridithFortGuardtower2);
		Access.addTwoWayEdge(Access.AseridithFortGuardtower2, Access.AseridithFortGuardtower3);
		Access.addTwoWayEdge(Access.AseridithFortGuardtower3, Access.AseridithFortGuardtowerTop);
		Access.addTwoWayEdge(Access.SuspiciousCombatsiteGiantTurtle, Access.ConcealedCavern);
		Access.addTwoWayEdge(Access.ConcealedCavern, Access.ClawMarkedCavern);
		Access.addTwoWayEdge(Access.TaelhollowSwamp, Access.TaelhollowSwampShrine);
		Access.addTwoWayEdge(Access.Desert, Access.CliffsideLookout);
		Access.addTwoWayEdge(Access.CliffsideLookout, Access.RockyPath);
		Access.addTwoWayEdge(Access.RockyPath, Access.MountainPlains);
		Access.addTwoWayEdge(Access.MountainPlains, Access.HermitCottage);
		Access.addTwoWayEdge(Access.MountainPlains, Access.ElvenGrove);
		Access.addTwoWayEdge(Access.MountainPlains, Access.HobgoblinTribeCampsite);
		Access.addTwoWayEdge(Access.NorthWestHills, Access.CricketonCaveEntrance);
		Access.addTwoWayEdge(Access.CricketonCaveEntrance, Access.CricketonCave);
		Access.addTwoWayEdge(Access.CricketonCave, Access.UndergroundStream);
		Access.addTwoWayEdge(Access.CricketonCave, Access.InfestedTunnel);
		Access.addTwoWayEdge(Access.InfestedTunnel, Access.BaronCricketonsLair);
		Access.addTwoWayEdge(Access.SandSweptPlains, Access.KujirMarshEntrance);
		Access.addTwoWayEdge(Access.KujirMarshEntrance, Access.KujirMarsh);
		Access.addTwoWayEdge(Access.KujirMarsh, Access.KujirMarsh2);
		Access.addTwoWayEdge(Access.KujirMarsh2, Access.KujirMarsh3);
		Access.addTwoWayEdge(Access.KujirMarsh3, Access.KujirMarsh4);
		Access.addTwoWayEdge(Access.KujirMarsh4, Access.LizardfolkMarshland);
		Access.addTwoWayEdge(Access.LizardfolkMarshland, Access.LizardfolkMarshland2);
		Access.addTwoWayEdge(Access.LizardfolkMarshland2, Access.LizardfolkMarshland3);
		Access.addTwoWayEdge(Access.LizardfolkMarshland3, Access.LizardkingHideout);
		Access.addTwoWayEdge(Access.LizardkingHideout, Access.LizardkingDen);
		Access.addTwoWayEdge(Access.LizardfolkMarshland, Access.HiddenPath);
		Access.addTwoWayEdge(Access.HiddenPath, Access.CalmPond);
		Access.addTwoWayEdge(Access.AphelionShrine, Access.AphelionShrineInterior);
		Access.addTwoWayEdge(Access.AphelionShrineInterior, Access.AphelionShrineSanctum);
		Access.addTwoWayEdge(Access.AphelionShrineSanctum, Access.AphelionShrineInnerSanctum);
		Access.addTwoWayEdge(Access.AphelionShrineInnerSanctum, Access.AphelionShrineRepository);
		Access.addTwoWayEdge(Access.AphelionShrineRepository, Access.AphelionShrineArchives);
		Access.addTwoWayEdge(Access.Aera, Access.ArtiusRiver);
		Access.addTwoWayEdge(Access.ArtiusRiver, Access.ArtiusLane);
		Access.addTwoWayEdge(Access.ArtiusLane, Access.MistyForest);
		Access.addTwoWayEdge(Access.MistyForest, Access.MistyMountainsBasin);
		Access.addTwoWayEdge(Access.MistyMountainsBasin, Access.MistyMountainPass);
		Access.addTwoWayEdge(Access.MistyMountainPass, Access.SteepMountainPath);
		Access.addTwoWayEdge(Access.SteepMountainPath, Access.LookoutPoint);
		Access.addTwoWayEdge(Access.LookoutPoint, Access.XarukForest);
		Access.addTwoWayEdge(Access.XarukForest, Access.XarukForest2);
		Access.addTwoWayEdge(Access.XarukForest2, Access.XarukForest3);
		map.addEdge(Access.XarukForest3, Access.XarukForest4);
		Access.addTwoWayEdge(Access.XarukForest4, Access.XarukForest5);
		Access.addTwoWayEdge(Access.XarukForest4, Access.XarukForest6);
		map.addEdge(Access.XarukForest6, Access.XarukForest2);
		Access.addTwoWayEdge(Access.XarukForest5, Access.Xaruk);
		Access.addTwoWayEdge(Access.Xaruk, Access.GreatGoblinFortressofXaruk);
		Access.addTwoWayEdge(Access.GreatGoblinFortressofXaruk, Access.FortressEntrance);
		Access.addTwoWayEdge(Access.FortressEntrance, Access.MainCorridor);
		Access.addTwoWayEdge(Access.MainCorridor, Access.Barracks);
		Access.addTwoWayEdge(Access.Barracks, Access.GeneralsQuarters);
		Access.addTwoWayEdge(Access.Barracks, Access.Armory);
		Access.addTwoWayEdge(Access.Barracks, Access.MessHall);
		Access.addTwoWayEdge(Access.MessHall, Access.Pantry);
		Access.addTwoWayEdge(Access.MainCorridor, Access.HiddenStaircase);
		Access.addTwoWayEdge(Access.HiddenStaircase, Access.MassiveCavern);
		Access.addTwoWayEdge(Access.MassiveCavern, Access.TranquilChamber);
		Access.addTwoWayEdge(Access.EasternDesert, Access.EasternDesert4);
		Access.addTwoWayEdge(Access.EasternDesert4, Access.CinderPlains);
		Access.addTwoWayEdge(Access.CinderPlains, Access.CinderMountainRange);
		Access.addTwoWayEdge(Access.CinderMountainRange, Access.AtlasTrailEntrance);
		Access.addTwoWayEdge(Access.CinderMountainRange, Access.SmolderingMountain);
		Access.addTwoWayEdge(Access.SmolderingMountain, Access.CoreofSmolderingMountain);
		Access.addTwoWayEdge(Access.CoreofSmolderingMountain, Access.GuardianoftheCore);
		Access.addTwoWayEdge(Access.SmolderingMountain, Access.SmolderingMountainAscent);
		Access.addTwoWayEdge(Access.SmolderingMountainAscent, Access.SmolderingMountainPeak);
		Access.addTwoWayEdge(Access.SmolderingMountainPeak, Access.CrumblingTemple);
		Access.addTwoWayEdge(Access.AseridithFortCourtyard, Access.AseridithFortCourtyard2);
		Access.addTwoWayEdge(Access.AseridithFortCourtyard2, Access.AseridithFortInnerGate);
		Access.addTwoWayEdge(Access.AseridithFortInnerGate, Access.AseridithFortBarracks);
		Access.addTwoWayEdge(Access.AseridithFortInnerGate, Access.AseridithFortTower);
		Access.addTwoWayEdge(Access.AseridithFortTower, Access.AseridithFortTower2);
		Access.addTwoWayEdge(Access.AseridithFortTower, Access.AseridithCommandersQuarters);
		Access.addTwoWayEdge(Access.AseridithFortTower2, Access.AseridithFortLibrary);
		Access.addTwoWayEdge(Access.AseridithFortInnerGate, Access.AseridithKeepGates);
		Access.addTwoWayEdge(Access.AseridithKeepGates, Access.AseridithKeepHallway);
		Access.addTwoWayEdge(Access.AseridithKeepHallway, Access.AseridithKeepGrandHall);
		Access.addTwoWayEdge(Access.AseridithKeepGrandHall, Access.AseridithKnightsQuarters);
		Access.addTwoWayEdge(Access.AseridithKeepGrandHall, Access.AseridithKeepKitchen);
		Access.addTwoWayEdge(Access.TowerEntrance, Access.DarkCorridor);
		Access.addTwoWayEdge(Access.DarkCorridor, Access.LongHallway);
		Access.addTwoWayEdge(Access.LongHallway, Access.SlumberChambers);
		Access.addTwoWayEdge(Access.LongHallway, Access.ApprenticeTrainingRoom);
		Access.addTwoWayEdge(Access.ApprenticeTrainingRoom, Access.FirstFloorStaircase);
		Access.addTwoWayEdge(Access.FirstFloorStaircase, Access.SecondFloorLanding);
		Access.addTwoWayEdge(Access.SecondFloorLanding, Access.CommonArea);
		Access.addTwoWayEdge(Access.CommonArea, Access.WestLibrary);
		Access.addTwoWayEdge(Access.WestLibrary, Access.SummoningChamber);
		Access.addTwoWayEdge(Access.SummoningChamber, Access.NarrowPassageway);
		map.addEdge(Access.NarrowPassageway, Access.SecondFloorStaircase);
		Access.addTwoWayEdge(Access.EastLibrary, Access.CommonArea);
		Access.addTwoWayEdge(Access.HerbGarden, Access.EastLibrary);
		Access.addTwoWayEdge(Access.PotionsLaboratory, Access.EastLibrary);
		Access.addTwoWayEdge(Access.PotionsLaboratory, Access.HerbGarden);
		Access.addTwoWayEdge(Access.PotionsLaboratory, Access.SecondFloorStaircase);
		Access.addTwoWayEdge(Access.SecondFloorStaircase, Access.ThirdFloorLanding);
		Access.addTwoWayEdge(Access.ThirdFloorLanding, Access.AstronomyAlcove);
		Access.addTwoWayEdge(Access.AstronomyAlcove, Access.SecretPassage);
		Access.addTwoWayEdge(Access.SecretPassage, Access.PortalRoom);
		Access.addTwoWayEdge(Access.SecretPassage, Access.GrandStudy);
		Access.addTwoWayEdge(Access.ThirdFloorLanding, Access.Observatory);
		Access.addTwoWayEdge(Access.PortalRoom, Access.Armory2);
		Access.addTwoWayEdge(Access.GrandStudy, Access.AlchemistQuarters);
		Access.addTwoWayEdge(Access.Armory2, Access.ThirdFloorStaircase);
		Access.addTwoWayEdge(Access.AlchemistQuarters, Access.ThirdFloorStaircase);
		Access.addTwoWayEdge(Access.ThirdFloorStaircase, Access.FourthFloorLanding);
		map.addEdge(Access.FourthFloorLanding, Access.StrangeEmptyRoom);
		map.addEdge(Access.StrangeEmptyRoom, Access.StrangeEmptyRoom2);
		map.addEdge(Access.StrangeEmptyRoom2, Access.StrangeEmptyRoom3);
		map.addEdge(Access.ArchmagesQuarters, Access.ThirdFloorStaircase);
		map.addEdge(Access.PortalRoom, Access.TowerEntrance);
		map.addEdge(Access.PortalRoom, Access.SummoningChamber);
		map.addEdge(Access.PortalRoom, Access.HerbGarden);
		map.addEdge(Access.NarrowPassageway, Access.SecondFloorStaircase);
		Access.addTwoWayEdge(Access.DeepHallway, Access.SmolderingCave);
		Access.addTwoWayEdge(Access.DeepHallway, Access.DescendingPath);
		Access.addTwoWayEdge(Access.DescendingPath, Access.StoneGateway);
		Access.addTwoWayEdge(Access.StoneGateway, Access.EchoingScream);
		Access.addTwoWayEdge(Access.StoneGateway, Access.SacredEarthTemple);
		Access.addTwoWayEdge(Access.StoneGateway, Access.Inferno);
		Access.addTwoWayEdge(Access.FortEntrance, Access.FortJunction);
		Access.addTwoWayEdge(Access.FortJunction, Access.OldFortLanding);
		Access.addTwoWayEdge(Access.FortJunction, Access.PlaceofWorship);
		Access.addTwoWayEdge(Access.StrangeEmptyRoom3, Access.ArchmagesQuarters);
		Access.addTwoWayEdge(Access.SacredAirTemple, Access.OuterStairs);
		Access.addTwoWayEdge(Access.OuterStairs, Access.CrumblingStoneStairs);
		Access.addTwoWayEdge(Access.CrumblingStoneStairs, Access.Aviary);
		Access.addTwoWayEdge(Access.CrumblingStoneStairs, Access.ColumnedRoom);
		Access.addTwoWayEdge(Access.ColumnedRoom, Access.WesternCarvedHallway);
		Access.addTwoWayEdge(Access.WesternCarvedHallway, Access.MoonRoom);
		Access.addTwoWayEdge(Access.DeathValley, Access.RedCliffs);
		Access.addTwoWayEdge(Access.RedCliffs, Access.RedCliffsEdge);
		Access.addTwoWayEdge(Access.RedCliffsEdge, Access.LostSeaShore);
		Access.addTwoWayEdge(Access.LostSea, Access.LostSeaShore);
		Access.addTwoWayEdge(Access.LostSea, Access.LostSea2);
		Access.addTwoWayEdge(Access.LostSea2, Access.LostSea3);
		Access.addTwoWayEdge(Access.LostSea3, Access.LostSea4);
		Access.addTwoWayEdge(Access.LostSea4, Access.EmeraldIsle);
		Access.addTwoWayEdge(Access.EmeraldIsle, Access.EmeraldIsleShores);
		Access.addTwoWayEdge(Access.EmeraldIsleShores, Access.TowerEntrance);
		Access.addTwoWayEdge(Access.CrumblingTemple, Access.AirTempleEntrance);
		Access.addTwoWayEdge(Access.AirTempleEntrance, Access.ColumnedRoom);
		Access.addTwoWayEdge(Access.SmokyAntechamber, Access.EastSingedCorridor);
		Access.addTwoWayEdge(Access.EastSingedCorridor, Access.DarkStairway);
		Access.addTwoWayEdge(Access.DarkStairway, Access.RedCrypt);
		Access.addTwoWayEdge(Access.SmokyAntechamber, Access.MainCorridor2);
		Access.addTwoWayEdge(Access.MainCorridor2, Access.HeatFilledAscent);
		Access.addTwoWayEdge(Access.HeatFilledAscent, Access.VolcanicAntechamber);
		Access.addTwoWayEdge(Access.VolcanicAntechamber, Access.SacredFireTemple);
		Access.addTwoWayEdge(Access.SmokyAntechamber, Access.WestSingedCorridor);
		Access.addTwoWayEdge(Access.WestSingedCorridor, Access.LavaTube);
		Access.addTwoWayEdge(Access.WastelandOverlook, Access.Savannah);
		Access.addTwoWayEdge(Access.Savannah, Access.AbandondedTribalCamp);
		Access.addTwoWayEdge(Access.AbandondedTribalCamp, Access.AbandonedHut);
		Access.addTwoWayEdge(Access.AbandonedHut, Access.AbandonedHutInterior);
		Access.addTwoWayEdge(Access.AbandondedTribalCamp, Access.Perch);
		Access.addTwoWayEdge(Access.Perch, Access.PerchStairwell);
		Access.addTwoWayEdge(Access.PerchStairwell, Access.ArchersPerch);
		Access.addTwoWayEdge(Access.VallAVillage, Access.StoreRoom);
		Access.addTwoWayEdge(Access.Ziggurat, Access.VallAVillage);
		Access.addTwoWayEdge(Access.ThatchedShelter, Access.VallAVillage);
		Access.addTwoWayEdge(Access.TanningHut, Access.VallAVillage);
		Access.addTwoWayEdge(Access.ThatchedShelter, Access.HutInterior);
		Access.addTwoWayEdge(Access.HutInterior, Access.HuntersChamber);
		Access.addTwoWayEdge(Access.TanningHut, Access.KeeperOfTheFlame);
		Access.addTwoWayEdge(Access.StoreRoom, Access.RootCellar);
		Access.addTwoWayEdge(Access.Ziggurat, Access.AromaticChamber);
		Access.addTwoWayEdge(Access.AromaticChamber, Access.PriestessChamber);
		Access.addTwoWayEdge(Access.AromaticChamber, Access.StoneAlcove);
		Access.addTwoWayEdge(Access.EmeraldIsleShores, Access.ForbiddenForest);
		Access.addTwoWayEdge(Access.ForbiddenForest, Access.DeadJungles);
		Access.addTwoWayEdge(Access.DeadJungles, Access.AbandonedHut2);
		Access.addTwoWayEdge(Access.DeadJungles, Access.TomboftheFallen);
		Access.addTwoWayEdge(Access.TomboftheFallen, Access.Stairwell);
		Access.addTwoWayEdge(Access.Stairwell, Access.TombEntrance);
		Access.addTwoWayEdge(Access.TombEntrance, Access.TombCenter);
		Access.addTwoWayEdge(Access.TombCenter, Access.EmbalmingRoom);
		Access.addTwoWayEdge(Access.EmbalmingRoom, Access.BurialHall);
		Access.addTwoWayEdge(Access.BurialHall, Access.LongHallway2);
		Access.addTwoWayEdge(Access.LongHallway2, Access.ShrineofNaKareth);
		Access.addTwoWayEdge(Access.TheFork, Access.SpiderCaveCavern);
		Access.addTwoWayEdge(Access.SpiderCaveCavern, Access.DeathlyForest);
		Access.addTwoWayEdge(Access.BriefRespite, Access.GlowingAscent);
		Access.addTwoWayEdge(Access.GlowingAscent, Access.DescendingPit);
		Access.addTwoWayEdge(Access.DescendingPit, Access.Labyrinth5);
		Access.addTwoWayEdge(Access.Labyrinth5, Access.Labyrinth4);
		
		// Access.addTwoWayEdge(Access, Access);
		
		map.addEdge(Access.RollingDunes ,Access.RollingDunes2);
		map.addEdge(Access.RollingDunes2 ,Access.RollingDunes3);
		map.addEdge(Access.RollingDunes3 ,Access.RollingDunes4);
		map.addEdge(Access.RollingDunes4 ,Access.RollingDunes5);
		map.addEdge(Access.RollingDunes5 ,Access.RollingDunes6);
		map.addEdge(Access.RollingDunes6 ,Access.RollingDunes7);
		map.addEdge(Access.RollingDunes7 ,Access.RollingDunes8);
		map.addEdge(Access.RollingDunes8 ,Access.RollingDunes);
		map.addEdge(Access.ShrineofNaKareth ,Access.DeadJungles);
		
		
		DijkstraShortestPath<MapVertex, DefaultEdge> pathFinder = new DijkstraShortestPath<MapVertex, DefaultEdge>(Access.map);
		Access.pathFinder = pathFinder;
		Access.restStops = new HashSet<MapVertex>(Arrays.asList(Access.AeraInn, Access.CastleGrounds,//Access.GreatNorthernValley,																						 
				Access.TheFork, Access.UmbraAbode, /* Access.AeraCountrySide */
				Access.WindingRiver, Access.WindingRiver7, Access.TaelhollowHut, Access.RollingDunes, Access.RestStop,
				Access.HighRoadWaterfallClearing, Access.HighRoadLake, Access.NorsPlains, Access.AseridithVillage,
				Access.ClawMarkedCavern, Access.CalmCave, Access.RollingDunes, Access.RollingDunes3, Access.RollingDunes7,
				Access.HermitCottage, Access.UndergroundStream, Access.CalmPond, Access.LizardfolkMarshland3,Access.Pantry,
				Access.TranquilChamber, Access.CinderMountainRange, Access.AseridithFortLibrary, Access.AseridithKeepKitchen,
				Access.SlumberChambers, Access.AstronomyAlcove, Access.StrangeEmptyRoom3, Access.SmolderingCave, Access.PlaceofWorship,
				Access.MoonRoom, Access.RedCrypt, Access.WastelandOverlook, Access.AbandonedHutInterior, Access.RootCellar, Access.StoneAlcove,
				Access.AbandonedHut2, Access.BriefRespite));
		
	}

	public void login() {
		login(Access.itemDriver, act);
		login(Access.driver, act);
		Access.itemDriver.get("https://www.google.com/");
		new Alt(controlPanel, act);
	}
	
	public void login(WebDriver driver, Account act) {
		WebDriverWait wait = new WebDriverWait(driver, 10);
		//wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id=\"signup-pane\"]/div/p[3]/a"))).click();
		WebElement usernameBox = wait
				.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//*[@id='identifierId']")));
		usernameBox.sendKeys(act.userName);
		driver.findElement(By.xpath("//*[@id=\"identifierNext\"]")).click();
		try {
			Thread.sleep(1500);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		WebElement passwordBox = wait.until(ExpectedConditions.presenceOfElementLocated(By.name("password")));
		passwordBox.sendKeys(act.password);
		driver.findElement(By.xpath("//*[@id=\"passwordNext\"]")).click();
		Access.sleep(1);
		
		
		wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.id("settings-button")));
		
		Access.run("changeUITo('classic')");
		
		
	}

	public static void main(String[] args) {
		System.setProperty("webdriver.chrome.driver", "libraries/chromedriver.exe");
		new MainDriver();
	}

	public void setAccount(int accountNum) {
		switch (accountNum) {
		case 0:
			act = new Account("UserName","Password","CharID","CharID","CharID");
			break;
		}
	}
}
